// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Entities.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ResultId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ResultId")
                        .IsUnique();

                    b.ToTable("Files");
                });

            modelBuilder.Entity("DAL.Entities.Result", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AllTimeInSeconds")
                        .HasColumnType("float");

                    b.Property<double>("AverageIndex")
                        .HasColumnType("float");

                    b.Property<double>("AverageTime")
                        .HasColumnType("float");

                    b.Property<DateTime>("FirstOperation")
                        .HasColumnType("datetime2");

                    b.Property<double>("MaximumIndex")
                        .HasColumnType("float");

                    b.Property<double>("MedianaIndex")
                        .HasColumnType("float");

                    b.Property<double>("MinimumIndex")
                        .HasColumnType("float");

                    b.Property<int>("StringsAmount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("DAL.Entities.Value", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Index")
                        .HasColumnType("float");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("DAL.Entities.File", b =>
                {
                    b.HasOne("DAL.Entities.Result", "Result")
                        .WithOne("File")
                        .HasForeignKey("DAL.Entities.File", "ResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Result");
                });

            modelBuilder.Entity("DAL.Entities.Value", b =>
                {
                    b.HasOne("DAL.Entities.File", "File")
                        .WithMany("Values")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("DAL.Entities.File", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("DAL.Entities.Result", b =>
                {
                    b.Navigation("File")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
